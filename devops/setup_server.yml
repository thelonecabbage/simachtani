---

- hosts: webservers
  user: root
  sudo: True

  tasks:
    - name: add nginx ppa
      action: apt_repository repo=ppa:nginx/stable state=present

    - name: install common packages needed for python application development
      action: apt pkg={{item}} state=installed
      with_items:
        - libpq-dev
        - libxml2-dev
        - libjpeg62
        - libjpeg62-dev
        - libfreetype6
        - libfreetype6-dev
        - sqlite3
        - hspell
        - zlib1g-dev
        - python-dev
        - python-setuptools
        - python-psycopg2
        - git-core
        - subversion
        - nginx
        - nodejs-legacy
        - npm

    - name: install bower
      npm: name=bower global=yes

    - name: install pip
      action: easy_install name=pip

    - name: install various libraries with pip
      action: pip name={{item}} state=present
      with_items:
        - virtualenv
        - supervisor
        - uwsgi

    - group: name=deploy state=present
    - name: create a deployment user
      user: name=deploy
            state=present
            groups="sudo,deploy"

    - authorized_key: user=deploy key="{{lookup('file', '~/.ssh/id_rsa.pub')}}"

    - name: adds passwordless commands to sudo
      action: lineinfile dest=/etc/sudoers regexp="^deploy" line="deploy ALL=(ALL) NOPASSWD:ALL" state=present

    - name: Disallow password authentication
      action: lineinfile dest=/etc/ssh/sshd_config regexp="^PasswordAuthentication" line="PasswordAuthentication no" state=present
      action: service name=ssh state=restarted

    - name: symlink imaging library files
      action: file src=/usr/lib/x86_64-linux-gnu/libfreetype.so dest=/usr/lib/libfreetype.so state=link

    - name: symlink imaging library files
      action: file src=/usr/lib/x86_64-linux-gnu/libz.so dest=/usr/lib/libz.so state=link

    - name: symlink imaging library files
      action: file src=/usr/lib/x86_64-linux-gnu/libjpeg.so.62 dest=/usr/lib/x86_64-linux-gnu/libjpeg.so state=link

    - name: symlink imaging library files
      action: file src=/usr/lib/x86_64-linux-gnu/libjpeg.so dest=/usr/lib/libjpeg.so state=link

    - name: remove default nginx site
      action: file path=/etc/nginx/sites-enabled/default state=absent

    - name: write nginx.conf
      action: template src=templates/nginx.conf dest=/etc/nginx/nginx.conf

    - name: create supervisord config folder
      action: file dest=/etc/supervisor state=directory owner=root

    - name: create supervisord config
      action: template src=templates/supervisord.conf dest=/etc/supervisord.conf

    - name: create supervisord init script
      action: template src=templates/supervisord.sh dest=/etc/init.d/supervisord mode=0755

    - name: start supervisord service and have it run during system startup
      action: service name=supervisord state=started enabled=yes

    - name: create webapps directory
      action: file dest=/srv/webapps state=directory